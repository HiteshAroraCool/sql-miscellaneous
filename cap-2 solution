Q2 )  What is the monthly distribution of trial plan start_date values for our dataset? — Use the start of the month as the group by value

select 
date_part('month',start_date) as start_month,
date_part('year',start_date) as start_year,
count(*)  as trial_plans  
from  dbo.subscriptions  
where plan_id = 0 
group by 1,2
order by 1,2


Q3)  What plan start_date values occur after the year 2020 for our dataset? Show the breakdown by count of events for each plan_name

select p.*, pl.plan_name 
from 
(
SELECT  plan_id , 
count(start_date)  as event_distribution   
FROM  dbo.subscriptions  
where date_part('year',start_date) > 2020
group by plan_id  
order by 1 
) as p 
join dbo.plans  as pl
on p.plan_id  = pl.plan_id


select p.*, pl.plan_name 
from 
(
SELECT  plan_id , 
count(start_date)  as event_distribution   
FROM  dbo.subscriptions  
where extract(year from  start_date) > 2020
group by plan_id  
order by 1 
) as p 
join dbo.plans  as pl
on p.plan_id  = pl.plan_id;


Q4)  What is the customer count and percentage of customers who have churned rounded to 1 decimal place? 

with total_customers as  
(
select  
count(distinct  customer_id) as total_customers ,  
(
select count(distinct  customer_id) as churned_customers 
from dbo.subscriptions
where plan_id  = 4
)
 from  dbo.subscriptions
)
select  *, round(((churned_customers*100.0)/(total_customers*100))*100,2) as percent_churn from total_customers ;  



Q5)  How many customers have churned straight after their initial free trial? — what percentage is this rounded to the nearest whole number? 

select  * , round(100*(trial_churn_customers*100.0)/(total_customers*100),2)
as percent_trial_churn
from  
(
select count(distinct customer_id) as trial_churn_customers ,  
(select count(distinct customer_id) as total_customers from dbo.subscriptions)
from 
(
select * from  
dbo.subscriptions 
where  customer_id in  
(
select distinct customer_id from  
dbo.subscriptions 
where customer_id in 
(
select distinct customer_id from 
(
SELECT customer_id, count(distinct plan_id) as opted_plans 
from  dbo.subscriptions 
group by customer_id
) as p 
where opted_plans  = 2
) 
and plan_id = 4
)  
) as q 
) as r


Q6)  What is the number and percentage of customer plans after their initial free trial? 

with next_plan as 
(
select  * , 
lead(plan_id,1) over (partition by customer_id  order by start_date) 
as next_planid  
from dbo.subscriptions
) ,
each_plan as 
(
select next_planid , count(distinct customer_id)   as customers_with_plan , (select count(distinct customer_id) from dbo.subscriptions) 
as all_customers
from next_plan  
where plan_id = 0 
and next_planid IS NOT NULL 
group by next_planid
)  
select next_planid,round( (100.0 * customers_with_plan) / (all_customers * 100.0 ),2) as per_cust
from  each_plan ;


Q7)  What is the customer count and percentage breakdown of all 5 plan_name values at 2020–12–31? 

Approach 1  

select plan_id,(100.0*count(distinct customer_id)) /  
((select count(distinct customer_id) from dbo.subscriptions)*100.0)
as customer_per_plan
from  dbo.subscriptions  
where start_date <= '2020-12-31' 
group by plan_id
having plan_id <>  0



Approach 2  

with next_plan as 
(
select * , 
lead(start_date,1) over (partition by customer_id order by start_date) as nextplandate 
from dbo.subscriptions
where  start_date  <=  '2020-12-31'
)  
select  plan_id , 
COUNT(distinct customer_id) as plan_customers , 
(select count(distinct customer_id) from dbo.subscriptions) as total_customers 
from next_plan 
where ( start_date <= '2020-12-31' and nextplandate > '2020-12-31') OR  (start_date <= '2020-12-31'  and nextplandate is null)
group by plan_id


Q8)  How many customers have upgraded to an annual plan in 2020? 

select count(distinct customer_id) as customers
from 
(
select  * , 
extract(year from start_date) as year_start_date 
from dbo.subscriptions  
where plan_id =  3
) as p 
where  year_start_date  = 2020 


Q9) How many days on average does it take a customer to an annual plan from the day they join Foodie-Fi? 

### Data analysis 

select  * from 
dbo.subscriptions 
where customer_id 
in 
(
select customer_id  
from 
(
select customer_id, count(distinct plan_id) as plans_cust  
from dbo.subscriptions  
where plan_id = 3  or plan_id = 0
group by customer_id
having count(distinct plan_id)  = 2  
order by customer_id 
) as p 
)



#Approach 1  
 with free_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  0
), 
annual_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  3
 ),
final_table as 
(
select  f.customer_id,f.start_date as free_startdate,
a.start_date as annual_start_date  
from  free_plan as f
join annual_plan  as a
on f.customer_id = a.customer_id  
) 

select avg(days) from 
(
select *,annual_start_date - free_startdate as days 
from final_table
) as p;


Q10 ) Can you further breakdown this average value into 30-day periods? (i.e. 0–30 days, 31–60 days etc

Approach 1  

with free_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  0
), 
annual_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  3
 ),
final_table as 
(
select  f.customer_id,f.start_date as free_startdate,
a.start_date as annual_start_date  
from  free_plan as f
join annual_plan  as a
on f.customer_id = a.customer_id  
) ,
days_table as 
(
select *,annual_start_date - free_startdate as days 
from final_table 
) 

select * , 
case when days between 0 and 30 then 1 
when days between 31 and 60 then 2
when days between 61 and 90 then 3
when days between 91 and 120 then 4
when days between 121 and 150 then 5
when days between 151 and 180 then 6
when days between 181 and 210 then 7
when days between 211 and 240 then 8
when days between 241 and 270 then 9
when days between 271 and 300 then 10
when days between 301 and 330 then 11
when days > 330 then 12
end as days_bucket  
from days_table; 



Approach 2  

with free_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  0
), 
annual_plan as 
(
select  * 
from dbo.subscriptions  
where plan_id  =  3
 ),
final_table as 
(
select  f.customer_id,f.start_date as free_startdate,
a.start_date as annual_start_date  
from  free_plan as f
join annual_plan  as a
on f.customer_id = a.customer_id  
) ,
days_table as 
(
select *,annual_start_date - free_startdate as days 
from final_table 
) 

select * , 
width_bucket(annual_start_date - free_startdate, 0 , 360 , 12) as days_bucket 
from days_table; 


Q11)  How many customers downgraded from a pro-monthly to a basic monthly plan in 2020?    


with nextplan as 
(
select * , 
lead(plan_id,1) over (partition by customer_id order by start_date)
as next_plan
from dbo.subscriptions 
) 
select count(distinct customer_id) as downgrade_customers
from  nextplan
where plan_id = 2
and next_plan = 1;


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
select count(distinct customer_id) from dbo.subscriptions;

select
	Date_PART('Month', start_date) as month_date,
    to_char(start_date, 'month') as month_name,
    count(*) as trial_subscriptions
from dbo.subscriptions
group by 1,2
order by 1;

select
    p.plan_name,
    p.plan_id,
    count(*) as trial_subscriptions
from 
dbo.subscriptions as s join dbo.plans as p
on s.plan_id = p.plan_id
where 
	date_part('year', s.start_date) > 2020
group by 1,2
order by 2;

select 
	p.plan_name,
    count(distinct s.*) as subscriptions,
    round(100 * count(distinct s.*)::NUMERIC/
    (select count(distinct customer_id) from dbo.subscriptions),1) as precentage
from dbo.subscriptions as s join dbo.plans as p
on s.plan_id = p.plan_id
where p.plan_name = 'churn'
group by 1
order by 1;

select count(*) as churn_count,
	round(100* count(*)/(SELECT COUNT(DISTINCT customer_id) FROM dbo.subscriptions),0) AS churn_percentage
from
(
select 
	s.customer_id,
	s.plan_id,
    p.plan_name,
    row_number() over (partition by s.customer_id order by s.plan_id) as plan_rank
from dbo.subscriptions as s join dbo.plans as p
on s.plan_id = p.plan_id
) a
where plan_id = 4 and plan_rank = 2;


select plan_id,
	plan_name,
	count(plan_id)
from
(
select 
	s.customer_id,
	s.plan_id,
    p.plan_name,
    row_number() over (partition by s.customer_id order by s.plan_id) as plan_rank
from dbo.subscriptions as s join dbo.plans as p
on s.plan_id = p.plan_id
) a
where plan_rank != 1
group by 1,plan_name
order by plan_id;

with next_plan_ctr as(
select customer_id,
	plan_id,
    LEAD(plan_id, 1) over (partition by customer_id ORDER BY plan_id) as next_plan
FROM dbo.subscriptions)

select
    next_plan,
	count(*) AS conversions,  
    ROUND(100 * COUNT(*)/ 
    (SELECT COUNT(DISTINCT customer_id) FROM dbo.subscriptions),0) AS conversion_percentage
from next_plan_ctr as n join dbo.plans as p
on n.plan_id = p.plan_id
where next_plan is not null and n.plan_id = 0
group by 1
order by 1;

WITH next_plan AS
( SELECT   
customer_id,   
plan_id,   
start_date,  
LEAD(start_date, 1) OVER(PARTITION BY customer_id ORDER BY start_date) as next_date 
FROM dbo.subscriptions 
WHERE start_date <= '2020-12-31' ),
customer_breakdown AS (  SELECT     
plan_id,     
COUNT(DISTINCT customer_id) AS customers  
FROM next_plan  
WHERE     
(next_date IS NOT NULL AND (start_date < '2020-12-31'       
AND next_date > '2020-12-31'))    
OR (next_date IS NULL AND start_date < '2020-12-31')  
GROUP BY plan_id 
SELECT plan_id, 
customers,   
ROUND(100 * customers / (    
SELECT COUNT(DISTINCT customer_id)     
FROM dbo.subscriptions),1) AS percentage 
FROM customer_breakdown GROUP BY plan_id, customers ORDER BY plan_id;

with trial as (
  select *
  from dbo.subscriptions
  where plan_id = 0
),

annual as (
  select *
  from dbo.subscriptions
  where plan_id = 3
)

select round(avg(a.start_date - t.start_date),1) as avg_day 
from annual as a join trial as t
on a.customer_id = t.customer_id;

with trial as (
  select *
  from dbo.subscriptions
  where plan_id = 0
),

annual as (
  select *
  from dbo.subscriptions
  where plan_id = 3
),

bins as (
  SELECT
  WIDTH_BUCKET(a.start_date - t.start_date, 0, 360, 12) AS bucket
  from annual as a join trial as t
  on a.customer_id = t.customer_id
)

select 
((bucket - 1)*30 || '-' || (bucket)*30|| ' day') as days,
count(*) as customer
from bins
group by bucket
order by bucket;

select count(*) as downgraded
from (
select *,
    lead(plan_id,1) over (partition by customer_id order by start_date) as next_plan
from dbo.subscriptions) a
where plan_id = 2
and next_plan = 1
and date_part('year', start_date) = '2020';
